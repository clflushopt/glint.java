package co.clflushopt.glint.sql;

import java.util.HashMap;
import java.util.Map;

/**
 * SQL keywords.
 *
 */
public enum Keyword implements TokenType {
    SCHEMA, DATABASE, TABLE, COLUMN, VIEW, INDEX, TRIGGER, PROCEDURE, TABLESPACE, FUNCTION,
    SEQUENCE, CURSOR, FROM, TO, OF, IF, ON, FOR, WHILE, DO, NO, BY, WITH, WITHOUT, TRUE, FALSE,
    TEMPORARY, TEMP, COMMENT, CREATE, REPLACE, BEFORE, AFTER, INSTEAD, EACH, ROW, STATEMENT,
    EXECUTE, BITMAP, NOSORT, REVERSE, COMPILE, ALTER, ADD, MODIFY, RENAME, ENABLE, DISABLE,
    VALIDATE, USER, IDENTIFIED, TRUNCATE, DROP, CASCADE, INSERT, INTO, VALUES, UPDATE, SET, DELETE,
    SELECT, DISTINCT, AS, CASE, WHEN, ELSE, THEN, END, LEFT, RIGHT, FULL, INNER, OUTER, CROSS, JOIN,
    USE, USING, NATURAL, WHERE, ORDER, ASC, DESC, GROUP, HAVING, UNION, DECLARE, GRANT, FETCH,
    REVOKE, CLOSE, CAST, NEW, ESCAPE, LOCK, SOME, LEAVE, ITERATE, REPEAT, UNTIL, OPEN, OUT, INOUT,
    OVER, ADVISE, SIBLINGS, LOOP, EXPLAIN, DEFAULT, EXCEPT, INTERSECT, MINUS, PASSWORD, LOCAL,
    GLOBAL, STORAGE, DATA, COALESCE, CHAR, CHARACTER, VARYING, VARCHAR, VARCHAR2, INTEGER, INT,
    SMALLINT, DECIMAL, DEC, NUMERIC, FLOAT, REAL, DOUBLE, PRECISION, DATE, TIME, INTERVAL, BOOLEAN,
    BLOB, AND, OR, XOR, IS, NOT, NULL, IN, BETWEEN, LIKE, ANY, ALL, EXISTS, AVG, MAX, MIN, SUM,
    COUNT, GREATEST, LEAST, ROUND, TRUNC, POSITION, EXTRACT, LENGTH, CHAR_LENGTH, SUBSTRING, SUBSTR,
    INSTR, INITCAP, UPPER, LOWER, TRIM, LTRIM, RTRIM, BOTH, LEADING, TRAILING, TRANSLATE, CONVERT,
    LPAD, RPAD, DECODE, NVL, CONSTRAINT, UNIQUE, PRIMARY, FOREIGN, KEY, CHECK, REFERENCES;

    /**
     * Keyword lookups.
     *
     */
    private static final Map<String, Keyword> KEYWORDS;

    static {
        KEYWORDS = new HashMap<>();
        for (Keyword keyword : values()) {
            KEYWORDS.put(keyword.name(), keyword);
        }
    }

    public static Keyword textOf(String text) {
        return KEYWORDS.get(text.toUpperCase());
    }
}
